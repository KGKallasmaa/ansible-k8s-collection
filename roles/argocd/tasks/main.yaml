---
- name: Create a k8s namespaces
  community.kubernetes.k8s:
    name: "{{ item }}"
    api_version: v1
    kind: Namespace
    state: present
  with_items:
    - "{{ argocd_namespace }}"
    - "{{ gitops_namespaces }}"

- name: Install Argo CD
  community.kubernetes.helm:
    name: argocd
    release_namespace: "{{ argocd_namespace }}"
    chart_repo_url: "https://argoproj.github.io/argo-helm"
    chart_ref: "argo-cd"
    chart_version: "{{ argocd_version }}"
    values: "{{ argocd_values }}"
    values_files: "{{ argocd_values_files }}"

- name: Wait for ArgoCD deployments
  community.kubernetes.k8s_info:
    kind: Deployment
    wait: yes
    wait_condition:
      type: Available
      status: "True"
      reason: MinimumReplicasAvailable
    name: "{{ item }}"
    namespace: "{{ argocd_namespace }}"
    wait_timeout: 360
  with_items:
    - argocd-application-controller
    - argocd-dex-server
    - argocd-redis
    - argocd-repo-server
    - argocd-server
  when: argocd_wait_for_deployments | bool

- name: Configure ArgoCD VirtualService
  community.kubernetes.k8s:
    state: present
    template: templates/argocd-vs.yaml.j2
  when: argocd_create_virtualservice | bool

- name: Configure ArgoCD Project
  community.kubernetes.k8s:
    state: present
    template: templates/project.j2

- name: Configure ArgoCD Applications
  community.kubernetes.k8s:
    state: present
    template: templates/application.j2
  loop: "{{ gitops_namespaces }}"
  loop_control:
    loop_var: loop_namespace

- name: Configure Seldon Deploy git-creds secret
  community.kubernetes.k8s:
    state: present
    template: templates/seldon-deploy-git-creds.yaml.j2

- name: Annotate Gitops Namespaces for Seldon Deploy
  community.kubernetes.k8s:
    name: "{{ item }}"
    api_version: v1
    kind: Namespace
    state: present
    definition:
      metadata:
        annotations:
          git-repo: "{{ gitops_repository }}"
        labels:
          seldon.gitops: "enabled"
  with_items:
    - "{{ gitops_namespaces }}"
